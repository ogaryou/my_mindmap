<!doctype html>
<html lang="ja">
  <head>
    <!-- Required meta tags -->
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">

    <!-- Bootstrap CSS -->
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/css/bootstrap.min.css" integrity="sha384-Vkoo8x4CGsO3+Hhxv8T/Q5PaXtkKtu6ug5TOeNV6gBiFeWPGFN9MuhOf23Q9Ifjh" crossorigin="anonymous">
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js"></script>
    <script type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/jqueryui/1.8.15/jquery-ui.min.js"></script>
    <!-- Optional JavaScript -->
    <!-- jQuery first, then Popper.js, then Bootstrap JS -->
    <script src="https://code.jquery.com/jquery-3.4.1.slim.min.js" integrity="sha384-J6qa4849blE2+poT4WnyKhv5vZF5SrPo0iEjwBvKU7imGFAV0wwj1yYfoRSJoZ+n" crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/popper.js@1.16.0/dist/umd/popper.min.js" integrity="sha384-Q6E9RHvbIyZFJoft+2mJbHaEWldlvI9IOYy5n3zV9zzTtmI3UksdQRVvoxMfooAo" crossorigin="anonymous"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/js/bootstrap.min.js" integrity="sha384-wfSDF2E50Y2D1uUdj0O3uMBJnjuUD4Ih7YwaYd1iqfktj0Uod8GCExl3Og8ifwB6" crossorigin="anonymous"></script>

  </head>
<body>
  <nav class="navbar navbar-expand-lg navbar-light bg-light">
    <a class="navbar-brand" href="#">マインドマップ</a>
    <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
      <span class="navbar-toggler-icon"></span>
    </button>

    <div class="collapse navbar-collapse" id="navbarSupportedContent">
      <ul class="navbar-nav mr-auto">
        <li class="nav-item dropdown">
          <a href="#" class="nav-link dropdown-toggle" id="navbarHistory" role="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
            過去のマップ等
          </a>
          <div class="dropdown-menu">
            <a class="dropdown-item" href="#">新しいマップ</a>
            <a class="dropdown-item" href="#">最後に使用したマップ</a>
            <div class="dropdown-divider"></div>
            <a class="dropdown-item" href="#">Separated link</a>
          </div>
        </li>
        <li class="nav-item dropdown">
          <a href="#" class="nav-link dropdown-toggle" id="navbarLayout" role="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
            Layout
          </a>
          <div class="dropdown-menu" id="layout" aria-labelledby="navbarLayout">
            <a class="dropdown-item" href="#" id="btnLayoutRightMain">Focus on MindMap</a>
            <a class="dropdown-item" href="#" id="btnLayoutLeftMain">Focus on Text</a>
            <a class="dropdown-item" href="#" id="btnLayoutRightOnly">MindMap only</a>
            <a class="dropdown-item" href="#" id="btnLayoutLeftOnly">Text only</a>
            <div class="dropdown-divider"></div>
            <a class="dropdown-item" href="#" id="btnCalendar">Calendar View</a>
          </div>
        </li>
      </ul>
    </div>
  </nav>
  <html>
  
  <head>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js"></script>   
  </head>
    <body>
      <div>
          <div style="float:left">
              <textarea id="text" name="text" rows="50" cols="50" style= "background-color: lightgray;"></textarea>
          </div>
          <div style="float:left;">
            <svg id="map" width="700" height="700"></svg>
          </div>
      </div>
          <script type="text/javascript">
        var svgNS = "http://www.w3.org/2000/svg";
        var htmlNS = "http://www.w3.org/1999/xhtml"

        var inputText = "";
        $("#text").keyup(function(){
            if(inputText != $("#text").val())
            {
                inputText = $("#text").val()
                drawMap(inputText);
            }
        })
        var nodeWidth = 100;
        var nodeHeight = 50;
        var xMargin = 50;
        var yMargin = 20;

        function drawMap(text)
        {
            $("#map").empty();

            console.log(text)
            nodeArray = parseText(text);
            nodeArray = decideNodePosition(nodeArray);
            console.log(nodeArray);

            for(var i = 0; i < nodeArray.length; i++)
            {
                drawSingleNode(nodeArray[i].text, nodeArray[i].x, nodeArray[i].y)
                var children = nodeArray[i].children;
                for(var j = 0; j < children.length; j++)
                {
                    connectNodes(nodeArray[i], children[j]);                
                }
            }
        }

        function decideNodePosition(nodeArray)
        {
            var leafCounter = 0;

            for(var i = 0; i < nodeArray.length; i++)
            {
                var level = nodeArray[i].level;
                nodeArray[i]["x"] = level*(nodeWidth + xMargin)

                if(nodeArray[i].children.length == 0)
                {
                    nodeArray[i]["y"] = leafCounter*(nodeHeight + yMargin)
                    leafCounter++;
                }
            }

            for(var i = nodeArray.length - 1; i >= 0; i--)
            {
                if(nodeArray[i].children.length > 0)
                {
                    var y = 0;
                    var middleNodeID = Math.floor(nodeArray[i].children.length/2);

                    if(nodeArray[i].children.length % 2 == 1)
                    {
                        y = nodeArray[i].children[middleNodeID].y;
                    }
                    else
                    {
                        var y1 = nodeArray[i].children[middleNodeID].y;
                        var y2 = nodeArray[i].children[middleNodeID - 1].y;
                        y = (y1 + y2)/2;
                    }

                    nodeArray[i]["y"] = y;
                }
            }

            return nodeArray
        }

        function drawSingleNode(text, x, y)
        {
            var rectElement = document.createElementNS(svgNS, "rect");
            rectElement.setAttribute("width", nodeWidth);
            rectElement.setAttribute("height", nodeHeight);
            rectElement.setAttribute("x", x);
            rectElement.setAttribute("y", y);
            rectElement.setAttribute("fill", "white");
            rectElement.setAttribute("stroke", "black");
            var foreignElement = document.createElementNS(svgNS, "foreignObject");
            foreignElement.setAttribute("width", nodeWidth);
            foreignElement.setAttribute("height", nodeHeight); 
            foreignElement.setAttribute("x", x);
            foreignElement.setAttribute("y", y);
            var innerElement = document.createElementNS(htmlNS, "div");
            innerElement.innerText = text;
            innerElement.style["padding"] = "0 5 0 5";

            document.getElementById("map").appendChild(rectElement);
            document.getElementById("map").appendChild(foreignElement);
            foreignElement.appendChild(innerElement);
        }

        function connectNodes(fromNode, toNode)
        {
            var lineElement = document.createElementNS(svgNS, "line");
            lineElement.setAttribute("x1", fromNode.x + nodeWidth);
            lineElement.setAttribute("y1", fromNode.y + nodeHeight/2);
            lineElement.setAttribute("x2", toNode.x);
            lineElement.setAttribute("y2", toNode.y + nodeHeight/2);
            lineElement.setAttribute("stroke", "black");

            document.getElementById("map").appendChild(lineElement);
        }


        function parseText(text)
        {
            textArray = text.split("\n")
            mapObject = new Object();
            nodeArray = [];

            levelArray = [];
            levelArray[0] = null;

            for(var i = 0; i < textArray.length; i++)
            {
                var level = 0;
                var text = textArray[i];

                for(var j = 0; j < text.length; j++)
                {
                    if(text.startsWith("*"))
                    {
                        text = text.substring(1);
                        level++;
                    }
                    else
                    {
                        break;
                    }
                }

                text = text.trim();

                var node = {id: i.toString(), text: text, level: level, parent: levelArray[level]}
                nodeArray.push(node)
                levelArray[level + 1] = node;
            }
            
            childrenMap = {};

            for(var i = nodeArray.length - 1; i >= 0; i--)
            {
                if(nodeArray[i].id in childrenMap)
                {
                    nodeArray[i]["children"] = childrenMap[nodeArray[i].id];
                }
                else
                {
                    nodeArray[i]["children"] = [];                
                }

                if(nodeArray[i].parent != null)
                {
                    if(!(nodeArray[i].parent.id in childrenMap))
                    {
                        childrenMap[nodeArray[i].parent.id] = []
                    }

                    childrenMap[nodeArray[i].parent.id].push(nodeArray[i]);
                }
            }

            return nodeArray;
        }
        </script>
    </body>
  </html>
</body>
</html>